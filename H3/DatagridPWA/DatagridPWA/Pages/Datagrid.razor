@page "/datagrid"
@using System.ComponentModel
@using System.Collections.ObjectModel
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h1>Works about 69/420 at a time</h1>

<InputFile OnChange="@AddFile" />

    <table class="table">
    <thead>
        <tr>
            <th></th>
            <th>Name:</th>
            <th>Date:</th>
            <th>Image:</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var data in GridData)
        {
            <tr>
                <td>
                    <a class="btn bg-danger text-white">X</a>
                </td>
                <td>@data.Name</td>
                <td>@data.LastModified</td>
                <td><img width="100" height="100" src="@ConvertBase64(data.Data)"/></td>
                <td>
                    <a class="btn bg-success text-white">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    public ObservableCollection<File> GridData { get; set; } = new ObservableCollection<File>();

    protected override async void OnInitialized()
    {
        await GetFiles();
    }
    
    private async Task AddFile(InputFileChangeEventArgs e)
    {                
        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        byte[] bytes = ms.ToArray();

        var file = new File(Guid.NewGuid(), e.File.Name, e.File.ContentType, e.File.Size, bytes, DateTime.Now);

        GridData.Add(file);

        await localStorage.SetItemAsync("files", GridData);
    }
    private async Task UpdateFile()
    {

    }
    private async Task DelFile(Guid guid)
    {

    }
    private async Task GetFiles()
    {
        if (await localStorage.ContainKeyAsync("files"))
        {
            GridData = await localStorage.GetItemAsync<ObservableCollection<File>>("files");
        }
    }
    private async Task ClearFiles()
    {
        await localStorage.ClearAsync();
    }

    private string ConvertBase64(byte[] bytes)
    {
        var base64 = Convert.ToBase64String(bytes);
        return String.Format("data:image/gif;base64,{0}", base64);
    }
}
